---
# tasks file for ansible-role-filesystem-security

# From Red Hat - https://access.redhat.com/solutions/41278
- name: "Ensure filesystem kernel modules are disabled"
  ansible.builtin.template:
    src: module.j2
    dest: "/etc/modprobe.d/{{ item }}.conf"
  with_items:
    - cramfs
    - freevxfs
    - hfs
    - hfsplus
    - jffs2
    - squashfs
    - udf
    - usb-storage

- name: "Check for 'nodev' mount option for /boot/efi mount"
  ansible.builtin.include_tasks:
    file: mount_options.yml
  vars:
    mount: "/boot/efi"
    option: "nodev"
  when:
    - ansible_facts['distribution'] == 'Debian'

- name: "Check for 'nodev' mount option for /dev/shm mount"
  ansible.builtin.include_tasks:
    file: mount_options.yml
  vars:
    mount: "/dev/shm"
    option: "nodev"

- name: "Check for 'noexec' mount option for /dev/shm mount"
  ansible.builtin.include_tasks:
    file: mount_options.yml
  vars:
    mount: "/dev/shm"
    option: "noexec"

- name: "Check for 'nosuid' mount option for /dev/shm mount"
  ansible.builtin.include_tasks:
    file: mount_options.yml
  vars:
    mount: "/dev/shm"
    option: "nosuid"

- name: "Check for 'nodev' mount option for /home mount"
  ansible.builtin.include_tasks:
    file: mount_options.yml
  vars:
    mount: "/home"
    option: "nodev"

- name: "Check for 'nosuid' mount option for /home mount"
  ansible.builtin.include_tasks:
    file: mount_options.yml
  vars:
    mount: "/home"
    option: "nosuid"

- name: "Check for 'nodev' mount option for /tmp mount"
  ansible.builtin.include_tasks:
    file: mount_options.yml
  vars:
    mount: "/tmp"
    option: "nodev"

- name: "Check for 'noexec' mount option for /tmp mount"
  ansible.builtin.include_tasks:
    file: mount_options.yml
  vars:
    mount: "/tmp"
    option: "noexec"
  when:
    - ansible_facts['os_family'] == 'RedHat'

- name: "Check for 'nosuid' mount option for /tmp mount"
  ansible.builtin.include_tasks:
    file: mount_options.yml
  vars:
    mount: "/tmp"
    option: "nosuid"

- name: "Check for 'nodev' mount option for /var mount"
  ansible.builtin.include_tasks:
    file: mount_options.yml
  vars:
    mount: "/var"
    option: "nodev"

- name: "Check for 'noexec' mount option for /var mount"
  ansible.builtin.include_tasks:
    file: mount_options.yml
  vars:
    mount: "/var"
    option: "noexec"
  when:
    - ansible_facts['os_family'] == 'RedHat'

- name: "Check for 'nosuid' mount option for /var mount"
  ansible.builtin.include_tasks:
    file: mount_options.yml
  vars:
    mount: "/var"
    option: "nosuid"

- name: "Check for 'nodev' mount option for /var/log mount"
  ansible.builtin.include_tasks:
    file: mount_options.yml
  vars:
    mount: "/var/log"
    option: "nodev"

- name: "Check for 'nodev' mount option for /var/log/audit mount"
  ansible.builtin.include_tasks:
    file: mount_options.yml
  vars:
    mount: "/var/log/audit"
    option: "nodev"

- name: "Update MultiPath Daemon config to blacklist any VMWare Virtual Disks"
  ansible.builtin.blockinfile:
    path: "/etc/multipath.conf"
    backup: yes
    block: |
      blacklist {
        device {
            vendor "VMware"
            product "Virtual disk"
        }
      }
  register: multipath
  when:
    - ansible_facts['distribution'] == 'Debian'

- name: "Restart MultiPath Daemon Service"
  ansible.builtin.service:
    name: multipathd
    state: restarted
  when: multipath.changed